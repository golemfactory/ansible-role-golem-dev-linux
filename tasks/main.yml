---
# tasks file for golem-dev-linux


- name: Install docker-ce dependencies
  apt:
    name:
      - software-properties-common
      - apt-transport-https
      - ca-certificates
      - curl
    update_cache: yes


- name: Install docker-ce key
  apt_key:
    url: "{{ docker_ce_repository_key_url }}"


- debug:
    msg: "TODO purge all other docker repositories"


- name: Add docker repo, 64bit ONLY!
  apt_repository:
    repo: "deb [arch=amd64] {{ docker_ce_repository_url }} {{ ansible_lsb['codename'] }} stable"


- name: Install docker-ce
  apt:
    name: docker-ce
    update_cache: yes


- name: Add GETH repo
  apt_repository:
    repo: "{{ geth_repository }}"


- name: Install GETH
  apt:
    name: ethereum
    update_cache: yes

- name: Setup buildbot-worker user
  user:
    name: "{{ buildbot_user }}"
    group: "{{ buildbot_group }}"
    groups:
      - docker
    home: "{{ buildbot_user_homedir }}"

- name: Install taskcollector dependencies
  apt:
    name:
      - gcc-5
      - g++-5
      - libfreeimage3
      - libfreeimage-dev


- name: Prepare hyperg directory
  file:
    dest: "{{ hyperg_base_dir }}"
    state: directory


- name: Install hyperg
  unarchive:
    src: "{{ hyperg_package_url }}"
    dest: "{{ hyperg_base_dir }}"
    remote_src: yes
#  args:
#    creates: "{{ hyperg_install_dir }}"


- name: Link hyperg
  file:
    src: "{{ hyperg_install_dir}}/hyperg"
    dest: "{{ hyperg_link_target_dir }}/hyperg"
    state: link


- name: Add python 3.6 repo
  apt_repository:
    repo: "ppa:jonathonf/python-3.6"
    update_cache: yes


- name: Install golemapp dependencies
  apt:
    name:
      - python3.6
      - python3.6-venv
      - python3.6-dev
      - openssl
      - pkg-config
      - libjpeg-dev
      - libopenexr-dev
      - libssl-dev
      - autoconf
      - libgmp-dev
      - libtool
      - libffi-dev
      - libgtk2.0-0
      - libxss1
      - libgconf-2-4
      - libnss3
      - libasound2
      - zip

# install rust
- get_url:
    url: https://sh.rustup.rs
    dest: /tmp/rust-install.sh
    force: yes
  become_user: "{{buildbot_user}}"
    # NOT SUPPORTED :( https://github.com/ansible/ansible/issues/2416
    #creates: /Users/buildbot-worker/.cargo/bin/rustup

- raw: sh /tmp/rust-install.sh -y
  become_user: "{{buildbot_user}}"
  args:
    creates: "{{buildbot_user_homedir}}/.cargo/bin/rustup"

- file: path=/tmp/rust-install.sh state=absent
  become_user: "{{buildbot_user}}"

- name: install rust nightly
  become_user: buildbot-worker
  command: "{{buildbot_user_homedir}}/.cargo/bin/rustup install nightly"

- name: install grcov coverage tool
  become_user: "{{buildbot_user}}"
  command: "{{buildbot_user_homedir}}/.cargo/bin/cargo install grcov"
  args:
    creates: "{{buildbot_user_homedir}}/.cargo/bin/grcov"

- name: install rust linter rustfmt
  become_user: "{{buildbot_user}}"
  command: "{{buildbot_user_homedir}}/.cargo/bin/rustup component add rustfmt"
